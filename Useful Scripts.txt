ToggleDMActive(game)
  Toggles "Rocket Death Match" on and off. Chirp to shoot rockets, press fly button/key rapidly to jump. Your companion can't see your rockets/explosions/craters/etc, but they do see you moving around strangely due to the third-person-shooter controls and jumping instead of flying.

game:cameraSystem():StartDebugCam()
game:cameraSystem():StopDebugCam()
  Start/stop the debug camera, which detaches from your character and can be rapidly moved all over the level. Press fly button/key to teleport your character in front of the camera.

game:debugHud():CycleMode()
  Displays a HUD showing some information about connection, cameras, and trigger timelines; cycles through three different levels of detail.

SpawnEvent{ triggertype = { var1 = a, var2 = b, etc } }
  Makes an event happen as if a trigger from the level's TriggerInstances.lua had been triggered, you can do a very large amount of custom events this way. 
  (Use the name of a trigger's Type as seen in TriggerInstances.lua for "triggertype", and fill in the variables the same way TriggerInstances shows for that type of trigger. You can also generate and view TempMetasystem.lua to see all trigger types including some that are unused in the regular game, see below)
  (This function is defined in PWeb3.lua but will not work unless you define it yourself; the default StartLua.lua will do that for you) 

DumpMetaSys()
  Creates TempMetasystem.lua in Journey root folder, which shows "A table of all non-abstract classes registered with the meta system". This file is useful to see all the possible triggers (will have metadata GardenerType = "Trigger") and the variables you can set for those triggers (it shows ObjectName, activityId, and lightbarId in all of them but these are not required to be set).
  (The function that the game defines in Tick.lua will crash your game; the default StartLua.lua modifies it to work the same and not crash)

Vars.table.option(value)
  Changes settings controlled by Vars.lua. You can also just change the values in Journey.exe itself, but this script is good for changing things while playing, and also some things will be changed by the game when it loads and you must use this script to actually make the game do what you want.
  (See Vars.lua in Data/Scripts for possible settings: use a table/category name for "table", the specific option name within that category for "option", and the desired value for "value".)

Vars.Game.cheatsEnabled(true)
  Needed for NetGui HUD to be turned on, and possibly other unknown things. Is reset to "false" when game loads so you must use lua script to set it to "true".
